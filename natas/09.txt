In natas8, we have a very similar website to the level natas6.
This time, upon clicking the link for viewing the source code,
we get the following HTML body:


<?

$encodedSecret = "3d3d516343746d4d6d6c315669563362";

function encodeSecret($secret) {
    return bin2hex(strrev(base64_encode($secret)));
}

if(array_key_exists("submit", $_POST)) {
    if(encodeSecret($_POST['secret']) == $encodedSecret) {
    print "Access granted. The password for natas9 is <censored>";
    } else {
    print "Wrong secret";
    }
}
?>

<form method=post>
Input secret: <input name=secret><br>
<input type=submit name=submit>
</form>


So, we should simply send the secret, and we have the encoded
secret's value. If we decode it and send, then we will be able to
learn the password for the next level.

Looking at the source code of the encoding function, we see that
the secret value we will send will first be encoded as base64, then
it will be transformed into hex. So, let us use the value in the
variable $encodedSecret, and decode in the reverse order:

Encoded Secret:     3d3d516343746d4d6d6c315669563362

Let us use an interactive Python shell:
In [1]: "3d3d516343746d4d6d6c315669563362".decode('hex')
Out[1]: '==QcCtmMml1ViV3b'

This looks like a reverse base64 string, since the equal signs
should have been at the end. Let us reverse it, and then decode base64:

In [2]: _[::-1].decode('base64')
Out[2]: oubWYf2kBq

So, this should be our secret. Entering it to the input form field,
we get the desired response:

Access granted. The password for natas9 is W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl 

So, the credentials are:

Username: natas9
Password: W0mMhUcRRnG8dcghE4qvk3JA9lGt8nDl
